# Docker Compose configuration for Continuo Platform

services:
  postgres:
    image: postgres:15-alpine
    container_name: continuo-postgres
    environment:
      POSTGRES_DB: continuo_dev
      POSTGRES_USER: continuo
      POSTGRES_PASSWORD: continuo_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - continuo-network

  redis:
    image: redis:7-alpine
    container_name: continuo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - continuo-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: continuo-api
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://continuo:continuo_password@postgres:5432/continuo_dev
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 4000
    ports:
      - "4000:4000"
    volumes:
      - ./api:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - continuo-network

  web:
    build:
      context: ./web-app
      dockerfile: Dockerfile.dev
    container_name: continuo-web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000/graphql
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./web-app:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - continuo-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: continuo-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - continuo-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: continuo-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - continuo-network

  adminer:
    image: adminer:latest
    container_name: continuo-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - continuo-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  continuo-network:
    driver: bridge